name: Build branch
run-name: Build ${{ github.ref }}

on:
  push:
    branches: ['*']

defaults:
  run:
    shell: bash -eu {0}

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          cache: true
          check-latest: true
          go-version-file: go.mod
      - run: go mod download
      - run: go vet ./...
      - run: go install sigs.k8s.io/controller-runtime/tools/setup-envtest@latest
      - run: setup-envtest use 1.25.0 --bin-dir=./bin
      - run: |
          go test \
            -ldflags "-X 'github.com/arikkfir/kude-controller/internal.versionString=0.0.0-dev+${GITHUB_SHA::7}'" \
            -v \
            -vet=off \
            -race \
            -shuffle ${{ github.run_number }} \
            -coverprofile=coverage.txt -covermode=atomic \
            ./...
      - uses: codecov/codecov-action@v3
        if: always()

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
      - uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            buildx-${{ runner.os }}-
            buildx-
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: docker-meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/arikkfir/kude-controller
          tags: |
            type=ref,event=branch
            type=sha,prefix=,format=short
            type=sha,prefix=,format=long
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
      - uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          file: Dockerfile
          labels: ${{ steps.docker-meta.outputs.labels }}
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
      - run: rm -rf /tmp/.buildx-cache && mv /tmp/.buildx-cache-new /tmp/.buildx-cache
