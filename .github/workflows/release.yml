name: Release
run-name: Release ${{ github.ref_name }}

on:
  push:
    tags:
      - 'v*.*.*'

defaults:
  run:
    shell: bash -eu {0}

jobs:

  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ github.ref_name }}
      versionWithBuild: ${{ github.ref_name }}+${{ steps.shortsha.outputs.sha }}
    steps:
      - uses: benjlevesque/short-sha@v2.1
        id: shortsha

  test:
    name: Test
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: benjlevesque/short-sha@v2.1
        id: shortsha
      - uses: actions/setup-go@v3
        with:
          cache: true
          check-latest: true
          go-version-file: go.mod
      - uses: arduino/setup-task@v1
      # TODO: cache setup-envtest
      - run: task test
        env:
          VERSION: ${{ needs.version.outputs.versionWithBuild }}
      - uses: codecov/codecov-action@v3
        if: always()

  docker:
    name: Docker
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
        with:
          install: true
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ghcr.io/arikkfir/kude-controller
          tags: |
            type=sha
            type=raw,value=${{ needs.version.outputs.version }}
            type=raw,value=${{ needs.version.outputs.versionWithBuild }}
      - uses: docker/build-push-action@v3
        with:
          build-args: VERSION=${{ needs.version.outputs.versionWithBuild }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.meta.outputs.tags }}
